devtools::install_github(saeidamiri1/scrnabox/scrnaboxR)
devtools::install_github("saeidamiri1/scrnabox/scrnaboxR")
library(ggVennDiagram)
library(gplots)
venn
? venn
library(foreach)
library(doParallel)
install.packages("doParallel")
library(doParallel)
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
package_version <- function(x) {
version <- as.character(unclass(utils::packageVersion(x))[[1]])
if (length(version) > 3) {
version[4:length(version)] <- crayon::red(as.character(version[4:length(version)]))
}
paste0(version, collapse = ".")
}
package_version(" scrnaboxR")
package_version("scRNABox")
library(scrnaboxR)
library(scrnaboxR)
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
library(scrnaboxR)
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
package_version <- function(x) {
version <- as.character(unclass(utils::packageVersion(x))[[1]])
if (length(version) > 3) {
version[4:length(version)] <- crayon::red(as.character(version[4:length(version)]))
}
paste0(version, collapse = ".")
}
package_version("tidyverse")
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
detach("package:scrnaboxR", unload = TRUE)
library(scrnaboxR)
library(scrnaboxR)
install.packages(c("MASS", "nlme"), lib="/usr/local/Cellar/r/4.2.1/lib/R/library")
library(scrnaboxR)
library(scrnaboxR)
library(scrnaboxR)
file_path='/Users/sam/Desktop/sa_int/intract_contrast/DAneurons'
dest_path='/Users/sam/Desktop/final_scrna_dge/test'
split_up_down(file_path,dest_path,cut_pvalue=0.05,cut_log_low=-0.25,cut_log_up=0.25, n_row=200)
file_path<-"/Users/sam/Desktop/final_scrna_dge/test"
file0<-extract_file(file_path)
con<-file0[[2]]
dst<-dist_contrast(con)
dst<-dist_contrast(con)
dst<-dist_contrast(con)
dim <- ncol(dst)
png(file = "/Users/sam/Desktop/final_scrna_dge/test2/heatmap.png", bg = "transparent")
image(1:dim, 1:dim, dst, axes = FALSE, xlab="", ylab="")
label0<-file0[[1]]
axis(1, 1:dim,label0 , cex.axis = 0.5, las=3)
axis(2, 1:dim, label0, cex.axis = 0.5, las=1)
text(expand.grid(1:dim, 1:dim), sprintf("%0.1f", dst), cex=0.6)
dev.off()
gwas_genes<-read.csv('/Users/sam/Library/CloudStorage/OneDrive-SharedLibraries-McGillUniversity/Roxanne LarivieÌ€re, Dr - Dark Genome 2weeks cultures/files/all_PD_gwas_loci_genes_filtered.csv')$hgnc_symbol
des_path='/Users/sam/Desktop/final_scrna_dge/test2'
file_path='/Users/sam/Desktop/final_scrna_dge/test'
dittplot(gwas_genes,file_path,des_path)
setwd("/Users/sam/Desktop/final_scrna_dge/test2")
file0='design1down'
sel_down_genes <- read.csv(paste('/Users/sam/Desktop/final_scrna_dge/test/',file0,'.csv',sep=""))[,1]
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
ggsave(file = "enrich1.pdf")
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go))
library(Seurat)
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
AnnotationDbi::keytypes(org.Hs.eg.db)
setwd("/Users/sam/Desktop/final_scrna_dge/test2")
file0='design1down'
sel_down_genes <- read.csv(paste('/Users/sam/Desktop/final_scrna_dge/test/',file0,'.csv',sep=""))[,1]
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
ggsave(file = "enrich1.pdf")
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go))
dotplot(enrichplot::pairwise_termsim(enr_go))
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
library('EnhancedVolcano')
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
ggsave(file = "EnhancedVolcano.pdf")
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
ggsave(file = "EnhancedVolcano.pdf")
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
ggsave(file = "EnhancedVolcano2.pdf")
toptable<-read.csv('/Users/sam/Desktop/final_scrna_dge/test/design1down.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
ggsave(file = "EnhancedVolcano3.pdf")
setwd("/Users/sam/Desktop/final_scrna_dge/test2")
file0='design1down'
sel_genes0 <- read.csv(paste('/Users/sam/Desktop/final_scrna_dge/test/',file0,'.csv',sep=""))[,1]
sel_genes_go0 <- clusterProfiler::enrichGO(sel_genes0,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_genes_go0@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_genes_go0)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
ggsave(file = "enrich1.pdf")
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_go0 <- clusterProfiler::enricher(gene = sel_genes0,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_go0@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go))
ggsave(file = "dot1.pdf")
cnetplot(enrichplot::pairwise_termsim(enr_go))
ggsave(file = "cnet1.pdf")
library(scrnaboxR)
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
library(EnhancedVolcano)
library(EnhancedVolcano)
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
ggsave(file = "EnhancedVolcano2.pdf")
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
getwd()
library(EnhancedVolcano)
setwd('/Users/sam/Desktop/final_scrna_dge')
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.off()
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
setwd('/Users/sam/Desktop/final_scrna_dge')
library(EnhancedVolcano)
setwd('/Users/sam/Desktop/final_scrna_dge')
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
rm(list=ls())
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
while (!is.null(dev.list()))  dev.off()
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.set(dev.next())
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
toptable<-read.csv('/Users/sam/Desktop/sa_int/intract_contrast/DAneurons/design1.csv')
EnhancedVolcano(toptable,lab = rownames(toptable),x = 'logFC',  y = 'P.Value', FCcutoff=1, title = 'A53T - AIW', drawConnectors = TRUE, max.overlaps= 30)
#ggsave(file = "EnhancedVolcano2.pdf")
dev.set(dev.next())
library(scrnaboxR)
.libPaths()
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
library(tidyverse)
AnnotationDbi::keytypes(org.Hs.eg.db)
setwd('/Users/sam/Desktop/sa_int/protemics_data/')
file0='A53T_Dark_genome_6_weeks_June2022_Scaffold'
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
sel_down_genes_b[,2]<-as.numeric(sel_down_genes_b[,2])
sel0=(((sel_down_genes_b[,3]< -0.25) &  (sel_down_genes_b[,2]< 0.05)))
sel_down_genes<-sel_down_genes_b[sel0,1]
sel_down_genes<-sel_down_genes[!is.na(sel_down_genes)]
file0<- paste(file0,'down', sep='')
if (length(sel_down_genes)!=0) {
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 4,label_format = 20)
ggsave("A53T_w6_down.png")
}
cnetplot(enrichplot::pairwise_termsim(enr_go))
? cnetplot
? enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
? enrichplot::emapplot
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
getwd()
setwd("Ëœ/Desktop)
setwd("~/Desktop")
ggsave("test.png")
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5, font.size = 4)
cnetplot(enrichplot::pairwise_termsim(enr_go))
cnetplot(enrichplot::pairwise_termsim(enr_go),font.size = 4))
cnetplot(enrichplot::pairwise_termsim(enr_go,font.size = 4))
? cnetplot
? enrichplot::emapplot
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
library(tidyverse)
AnnotationDbi::keytypes(org.Hs.eg.db)
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
ggsave("PRKN-KO_w2_up_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_up_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
ggsave("PRKN-KO_w2_down_dotplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_down_dotplot.png")
}
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
setwd('/Users/sam/Desktop/sa_int/protemics_data/')
file0='PRKN-KO_Dark_genome_2_weeks_June2022_Scaffold'
sel_down_genes_b <- read.csv(paste('/Users/sam/Desktop/sa_int/protemics_data/',file0,'.csv',sep=""))[,c(6,9,10)]
sel_down_genes_b[,2]<-as.numeric(sel_down_genes_b[,2])
sel0=(((sel_down_genes_b[,3]< -0.25) &  (sel_down_genes_b[,2]< 0.05)))
sel_down_genes<-sel_down_genes_b[sel0,1]
sel_down_genes<-sel_down_genes[!is.na(sel_down_genes)]
file0<- paste(file0,'down', sep='')
if (length(sel_down_genes)!=0) {
sel_vs_norm_go <- clusterProfiler::enrichGO(sel_down_genes,"org.Hs.eg.db",keyType = "SYMBOL",ont = "BP",minGSSize = 50)
write.csv(sel_vs_norm_go@result,file = paste(file0,'enrichGO','.csv',sep=''))
enr_go <- clusterProfiler::simplify(sel_vs_norm_go)
enrichplot::emapplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30, cex_label_category = 0.5)
ggsave("PRKN-KO_w2_down_enrichplot.png")
}
if (length(sel_down_genes)!=0) {
gmt <- msigdbr::msigdbr(species = "human", category = "H")
sel_vs_norm_enrich <- clusterProfiler::enricher(gene = sel_down_genes,,pAdjustMethod = "BH",pvalueCutoff  = 0.05, qvalueCutoff  = 0.05, TERM2GENE = gmt[,c("gs_name", "gene_symbol")])
write.csv(sel_vs_norm_enrich@result,file = paste(file0,'enricher','.csv',sep=''))
dotplot(enrichplot::pairwise_termsim(enr_go),showCategory = 30,font.size = 3,label_format = 20)
#ggsave("PRKN-KO_w2_down_dotplot.png")
}
library(scrnaboxR)
library(scrnaboxR)
? dotplot
library(scrnaboxR)
PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds'
PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds'
aa<-read_csv(PSUE='/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds')
aa<-read_csv('/Users/sam/Desktop/annot/annotation_d_b/seu_int_clu.rds')
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
aa<-read_csv(PSUE)
ll
ls()
head(aa)
aa<-readRDS(PSUE)
head(aa)
level_cluster='predicted.id'
PWD='/Users/sam/Desktop/annot/annotation_d_b/'
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
top_sel=5
db <- c('Descartes_Cell_Types_and_Tissue_2021','CellMarker_Augmented_2021','Azimuth_Cell_Types_2021')
annotation(level_cluster,PWD,PSUE,top_sel,db)
annotation
level_cluster='predicted.id'
PWD='/Users/sam/Desktop/annot/annotation_d_b/'
library(Seurat)
library(Matrix)
library(dplyr)
library(ggplot2)
library("xlsx")
setwd(PWD)
PSUE='/Users/sam/Desktop/annot/annotation_d_b/ctrl_temp_52.rds'
ls()
rm(aa)
seu.q6 <- readRDS(PSUE)
# cd /Users/sam/Desktop/annot/annotation_c/
setwd(PWD)
# mkdir -p annot_enrich
dir.create("annot_enrich")
for (i in as.numeric(levels(unlist(unique(seu.q6[[level_cluster]]))))) {
dir.create(paste0(PWD,"/annot_enrich", "/clust",i))
}
i
# length(unique(seu.q6$integrated_snn_res.0.5))
Idents(seu.q6) <- level_cluster
ClusterMarkers <- FindAllMarkers(seu.q6, only.pos = TRUE)
ClusterMarkers$cluster
getwd()
write.csv(top5,"top_sel.csv")
top5 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=5, wt = avg_log2FC)
write.csv(top5,"top_sel.csv")
seu.q6[[level_cluster]]
levels(unlist(unique(seu.q6[[level_cluster]])))
levels(unlist(unique(seu.q6[[level_cluster]])))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
unique(seu.q6[[level_cluster]])
))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
unique(seu.q6[[level_cluster]])
))
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
(seu.q6[[level_cluster]])
))
seu.q6[[level_cluster]]
# for(i in as.numeric(unique(seu.q6$level_cluster))){
levels(unlist(
(seu.q6[[level_cluster]])
))
level(seu.q6[[level_cluster]])
levels(seu.q6[[level_cluster]])
unique(seu.q6[[level_cluster]])
unlist(unique(seu.q6[[level_cluster]]))
for (i in unlist(unique(seu.q6[[level_cluster]]))) {
N1.c0 <- ClusterMarkers %>% filter(cluster == i & avg_log2FC > 0)
genes <- N1.c0$gene
write.xlsx(genes, file="cluster_just_genes.xlsx",sheetName=paste0('cluster',i), row.names=FALSE,append=TRUE)
write.xlsx(N1.c0, file="cluster_whole.xlsx",sheetName=paste0('cluster',i), row.names=FALSE,append=TRUE)
}
DimPlot(seu.q6,group.by = level_cluster)
head(seu.q6)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = seu.q6$Lables)
eu.q6$Lables
seu.q6$Lables
DimPlot(seu.q6,group.by = seu.q6$Lables)
Idents(seu.q6) <- Lables
Idents(seu.q6) <- Lables
Idents(seu.q6) <- 'Lables'
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = Lables)
Idents(seu.q6) <- 'Lables'
DimPlot(seu.q6)
ggsave(file = "umap_geneotp.pdf")
getwd()
level_cluster='integrated_snn_res.0.7'
Idents(seu.q6) <- 'integrated_snn_res.0.7'
DimPlot(seu.q6)
DimPlot(seu.q6,group.by = Lables)
DimPlot(seu.q6,group.by = 'Lables')
head(seu.q6)
? DimPlot
DimPlot(seu.q6,split.by = 'Lables')
ggsave(file = "umap_splited.pdf")
level_cluster='integrated_snn_res.0.7'
unlist(unique(seu.q6[[level_cluster]]))
for (i in unlist(unique(seu.q6[[level_cluster]]))) {
print(i)
}
for (i in sor(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
for (i in sort(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
level_cluster='predicted.id'
unlist(unique(seu.q6[[level_cluster]]))
for (i in sort(unlist(unique(seu.q6[[level_cluster]])))) {
print(i)
}
sort(unlist(unique(seu.q6[[level_cluster]])))
sort(unlist(unique(seu.q6[[level_cluster]])))
seu.q6[[level_cluster]]
seu.q6[level_cluster]
? FindAllMarkers
? FindTransferAnchors
library(Seurat)
library(SeuratObject)
? TransferData
? eval
